################################################################################
# This docker file will run the containers to generate an AiiDA work env.
#
# Commands:
#
#   $ docker-compose up -d
#   $ docker exec -it aiida /bin/bash
#   $ docker-compose down -v
#
#   $ docker-compose -p "stack_name" up -d
#   $ docker-compose -p "stack_name" down -v
#
################################################################################
version: '3.4'

services:

  rmq:
    hostname: "rmq"
    #container_name: "rmq"
    image: "rabbitmq:latest"
    #image: "rabbitmq:alpine"
    networks:
      - "fakenet"
    #ports:
    #  - "5672:5672"
    healthcheck:
      test: "rabbitmq-diagnostics -q ping"
      interval: 30s
      timeout: 30s
      retries: 3

  pdb:
    # Checkout https://hub.docker.com/_/postgres for more info
    hostname: "pdb"
    #container_name: "pdb"
    image: "postgres:latest"
    #image: "postgres:alpine"
    networks:
      - "fakenet"
    #ports:
    #  - 5432:5432
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: main_db
    volumes:
      - "./deploy/pdb:/docker-entrypoint-initdb.d" # This is for initialization scripts, only run if data dir is empty
      - "./data/dbase:/var/lib/postgresql/data" # This is for data persistence
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  workenv:
    hostname: "aiida"
    #container_name: "aiida"
    image: "aiida_workenv:v0.3"
    #expose:
    #  - "8888" # AiiDa Lab
    #  - "8890" # Jupyter Lab
    #  - "5000" # REST API
    ports: # local:container
      - 8888 #:8888
      - 8890 #:8890
      - 5000 #:5000
    volumes:
      - "./data/codes:/home/devuser/codes"
      - "./data/aiida:/home/devuser/.aiida"
    depends_on:
      pdb:
        condition: service_healthy
      rmq:
        condition: service_healthy
    networks:
      - "fakenet"
    environment:
      LC_ALL: "en_US.UTF-8"
      LANG: "en_US.UTF-8"
      RMQ_HOST: rmq
      RMQ_PORT: "5672"
      PSQL_HOST: pdb
      PSQL_PORT: "5432"
      PGHOST: pdb
      PGPORT: "5432"
      PGUSER: "postgres"
      PGPASSWORD: "postgres"
      # Make an aiida test profile and export it here AIIDA_TEST_PROFILE=my-test-profile
      # AIIDA_TEST_PROFILE: "test_django"
      # AIIDA_TEST_PROFILE: "test_sqlalc"
      # healthcheck:
      #   check that the daemon has been started for the 'generic' profile
      #   can take a few minutes to start
      #   test: systemctl is-active --quiet aiida-daemon@generic.service
      #   start_period: 30s
      #   interval: 30s
      #   timeout: 5s
      #   retries: 6
      #
      # OTHER check
      #      test: bash -c "[ -f /tmp/a ]"
      #      start_period: 30s
      #      interval: 30s
      #      timeout: 5s
      #      retries: 6

networks:
  fakenet:
    driver: bridge

